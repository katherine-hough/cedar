name: "Report Coverage"
description: "Creates a coverage report"
inputs:
  threshold:
    description: "Minimum proportion of modified lines that need to be covered for acceptance or -1 if there is no minimum."
    required: false
    default: "-1"

runs:
  using: "composite"
  steps:
    - name: Install LLVM tools
      shell: bash
      run: rustup component add llvm-tools-preview
    - name: Install grcov
      shell: bash
      run: cargo install grcov
    - name: Collect coverage profiles
      shell: bash
      run: |
        zip -0 raw_cov.zip $(find . -name "*.profraw") -q
        rm $(find -name '*.profraw')
    # Note: source-based branch coverage is not supported for Rust
    # (see http://github.com/rust-lang/rust/issues/79649)
    - name: Build coverage report
      shell: bash
      run: |
        mkdir -p ./target/coverage
        grcov raw_cov.zip \
            --source-dir . \
            --binary-path ./target/debug/ \
            -t html,cobertura \
            --ignore 'target/debug/*' \
            --ignore "/*" \
            --ignore-not-existing \
            -o ./target/coverage/
    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v4
      id: upload-artifact
      with:
        name: coverage_report
        path: target/coverage/html/
        retention-days: 90
    - name: Compute changed lines
      id: changed_lines
      uses: hestonhoffman/changed-lines@v1
      with:
        file_filter: '.rs'
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - name: Create result files
      shell: bash
      run: |
        mkdir -p target/coverage/results
        echo $ISSUE_NUMBER >> target/coverage/results/issue_number.txt
        echo $CHANGED_LINES >> target/coverage/results/changed_lines.json
        python .github/scripts/process_coverage.py \
          target/coverage/cobertura.xml \
          target/coverage/results/changed_lines.json \
          $THRESHOLD \
          $REPORT_LOCATION \
          target/coverage/results
      env:
        CHANGED_LINES: ${{ steps.changed_lines.outputs.changed_lines }}
        THRESHOLD: ${{ inputs.threshold }}
        ISSUE_NUMBER: ${{ github.event.number }}
        REPORT_LOCATION: ${{ steps.upload-artifact.outputs.artifact-url }}
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: coverage_results
        path: target/coverage/results/
        retention-days: 1