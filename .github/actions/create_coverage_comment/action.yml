name: "Create Coverage PR Comment"
description: >
  Build a markdown comment to be posted to a PR by the "comment_pr" workflow.
  If threshold is set, fails the build if the reported coverage does not meet
  met expected criteria.
  Downloads the cobertura coverage report for the current workflow run.
  TODO
  Uploads the created markdown comment and the number of the PR that triggered this action as workflow artifacts.
inputs:
  threshold:
    description: >
      Minimum proportion of modified lines that need to be covered for acceptance or -1 if there is no minimum.
    required: false
    default: "-1"
  report-artifact-prefix:
    description: "Prefix the name of the artifact to be downloaded"
    required: false
    default: "coverage_reports"
  comment-artifact-name:
    description: "Name of the artifact to be uploaded"
    required: false
    default: "coverage_comment"

runs:
  using: "composite"
  steps:
    - name: Download report artifacts
      uses: actions/download-artifact@v4
      with: 
        name: ${{ report-artifact-prefix }}_cobertua
    - name: List files
      shell: bash
      run: ls -a 
    - name: Compute changed lines
      id: changed_lines
      uses: hestonhoffman/changed-lines@v1
      with:
        file_filter: '.rs'
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - name: Create result files
      shell: bash
      run: |
        mkdir -p target/coverage/results
        echo $ISSUE_NUMBER > target/coverage/results/issue_number.txt
        echo $CHANGED_LINES > target/coverage/results/changed_lines.json
        python .github/scripts/process_coverage.py \
          cobertura.xml \
          target/coverage/results/changed_lines.json \
          $THRESHOLD \
          $REPORT_LOCATION \
          target/coverage/results
        echo "STATUS=$(cat target/coverage/results/status.txt)" >> $GITHUB_ENV
        echo "HEAD_SHA: $HEAD_SHA"
        echo "BASE_SHA: $BASE_SHA"
      env:
        CHANGED_LINES: ${{ steps.changed_lines.outputs.changed_lines }}
        THRESHOLD: ${{ inputs.threshold }}
        ISSUE_NUMBER: ${{ github.event.number }}
        REPORT_LOCATION: $(cat rreport_location.txt)
        HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        BASE_SHA: ${{ github.event.pull_request.base.sha }}
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.comment-artifact-name }}
        path: target/coverage/results/
        retention-days: 1
    - name: Check status
      if: ${{ env.STATUS == 'FAILED' }}
      uses: actions/github-script@v3
      with:
        script: |
            core.setFailed('Required coverage criteria were not met.')